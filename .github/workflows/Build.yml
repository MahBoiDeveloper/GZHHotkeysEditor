name: Build Project

# Workflow will trigger on any push to the master/main branch
on: 
  pull_request:
  push:
    branches:
      - master
      - main

jobs:
  Autocompilation:
    # Our project is windows only, so we will compile project at windows server
    runs-on: windows-2022
    steps:
      # Cloning all repository recursively
      - name: Get Sources
        uses: actions/checkout@v4
        with:
          submodules: true

      # Check this about more info: https://github.com/marketplace/actions/install-version-specific-mingw
      # Setting up MinGW_x64 version 8.1.0
      - name: Set Up MinGW
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x64
          version: 12.2.0

      # Check this about more info: https://github.com/marketplace/actions/install-qt
      # This action cannot download needed mingw810
      # So it downloads only Qt part
      - name: Set Up Qt
        uses: jurplel/install-qt-action@v3
        with: 
          version: 5.15.2
          arch: win64_mingw81
          target: desktop
          dir: C:\

      # Check this about more info: https://github.com/marketplace/actions/cmake-action
      - name: Set Up CMake
        uses: threeal/cmake-action@v1.3.0
        with:
          run-build: false

      # Compile code
      - name: Compile Project
        shell: cmd
        run: |
          :: Remove previous cmake build folder
          
          rmdir /s /q build >nul 2>nul
          :: Link MinGW to system variables
          mkdir C:\Qt\Tools > nul
          mklink C:\Qt\Tools\mingw_64 C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64 > nul
          set PATH=%PATH%;C:\Qt\5.15.2\mingw81_64\bin;C:\Qt\Tools\mingw_64\bin
          
          :: Print header
          echo Generals Zero Hour Hotkeys editor
          echo Authors: mah_boi, nikitvs
          echo.

          :: Set up cmake config folder for the project
          echo Configuring MinGW Make...
          cmake -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -DCMAKE_C_COMPILER:FILEPATH=C:\Qt\Tools\mingw_64\bin\gcc.exe -DCMAKE_CXX_COMPILER:FILEPATH=C:\Qt\Tools\mingw_64\bin\g++.exe -S.\ -B.\build -G "MinGW Makefiles"
          echo Configuring MinGW Make done
          echo.

          :: Start compiling
          echo Compilation and linking executables...
          cmake --build .\build --config Release --target all -j 16
          echo Compilation and linking executables done
          echo.

          :: Add any file to "Logs" folder for the next shipping
          mkdir build\exe\Logs >nul 2> nul
          cd build\exe\Logs
          echo Do not delete this folder, please. Or program will can not be start. > readme.txt

      # Upload artifact to the GitHub
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
           # ${{github.sha}} - commit long hash name
           name: GZHHotkeyEditor-${{github.sha}}
           # zip all content in the "build\exe" folder
           path: build/exe/**
